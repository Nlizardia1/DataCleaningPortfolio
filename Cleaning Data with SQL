/*
Cleaning Data in SQL
*/


--------------------------------------------------------------------------------------------------------------------------

-- Standardize Data Format

Select SaleDateConverted, Convert (Date,SaleDate)
From PortfolioProject..Nashvillehousing

Update Nashvillhousing
SET Saledate= Convert (Date,SaleDate)

ALTER TABLE NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
SET SaleDateConverted = CONVERT (DATE, SaleDate)

--------------------------------------------------------------------------------------------------------------------------

--Populate Property Address data

Select *
From PortfolioProject..Nashvillehousing
--Where PropertyAddress is null
Order by ParcelID

Select a.parcelID, a.propertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject..Nashvillehousing a
JOIN PortfolioProject..Nashvillehousing b
	on a.ParcelID= b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
Where a.propertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject..Nashvillehousing a
JOIN PortfolioProject..Nashvillehousing b
	on a.ParcelID= b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
Where a.propertyAddress is null

--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)

Select PropertyAddress
From PortfolioProject..Nashvillehousing
--Where PropertyAddress is null
--Order by ParcelID

Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)  +1, LEN(PropertyAddress)) as State 

From PortfolioProject..Nashvillehousing

ALTER TABLE PortfolioProject..Nashvillehousing
Add PropertySplitAddress Nvarchar(255);

Update PortfolioProject..Nashvillehousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )


ALTER TABLE PortfolioProject..Nashvillehousing
Add PropertySplitCity Nvarchar(255);

Update PortfolioProject..Nashvillehousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

Select *
From PortfolioProject..NashvilleHousing

Select OwnerAddress
From PortfolioProject..NashvilleHousing


Select
PARSENAME (REPLACE(OwnerAddress,',','.'), 3)
, PARSENAME (REPLACE(OwnerAddress,',','.'), 2)
, PARSENAME (REPLACE(OwnerAddress,',','.'), 1)
From PortfolioProject..NashvilleHousing



ALTER TABLE PortfolioProject..Nashvillehousing
Add OwnerSplitAddress Nvarchar(255);

Update PortfolioProject..Nashvillehousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE PortfolioProject..Nashvillehousing
Add OwnerSplitCity Nvarchar(255);

Update PortfolioProject..Nashvillehousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE PortfolioProject..Nashvillehousing
Add OwnerSplitState Nvarchar(255);

Update PortfolioProject..Nashvillehousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

--------------------------------------------------------------------------------------------------------------------------

-- Change Y and N to Yes and No in "Sold as Vacant" field

Select Distinct(soldAsVacant), count(SoldAsVacant)
From PortfolioProject..NashvilleHousing
Group by SoldAsVacant
order by 2


Select SoldAsVacant
,	CASE When SoldAsVacant = 'Y' THEN 'Yes'
		When SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
		END
From PortfolioProject..NashvilleHousing


Update PortfolioProject..NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
		When SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
		END

--------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates


WITH RowNumCTE AS (
Select *,
	ROW_NUMBER()OVER (
	PARTITION BY ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				Order By
					UniqueID
					) row_num
From PortfolioProject..NashvilleHousing
--Order by ParcelID
)

DELETE
From RowNumCTE
Where row_num > 1

Select *
From PortfolioProject..NashvilleHousing
